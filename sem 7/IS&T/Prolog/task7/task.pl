% Экспертная система про языки программирования

% Определение изменяемости отношений "верно" и "ложно"
:- dynamic верно/2, ложно/2.

% Дополнение базы знаний
запомнить(Арг1, Арг2, да) :- assert(верно(Арг1, Арг2)).
запомнить(Арг1, Арг2, нет) :- assert(ложно(Арг1, Арг2)).

% Если в базе нет ни подтверждения, ни отрицания факта, то следует спросить факт у пользователя
узнать(Арг1, Арг2, Ответ) :- format('~w ~w? Ответ: ', [Арг1, Арг2]), read(Ответ), запомнить(Арг1, Арг2, Ответ).

% Определение очищения базы знаний
очистить:-
    retract(верно(_,_)), fail. 
очистить:-
    retract(ложно(_,_)), fail.

% Если в базе есть подтверждение свойства или если спросили про положительный факт
свойство(Арг1, Арг2) :- верно(Арг1, Арг2), !.
свойство(Арг1, Арг2) :- not(ложно(Арг1, Арг2)), узнать(Арг1, Арг2, Ответ), Ответ = 'да'.

% Если в базе есть отрицание свойства или если спросили про отрицательный факт
нет_свойства(Арг1, Арг2) :- ложно(Арг1, Арг2), !.
нет_свойства(Арг1, Арг2) :- not(верно(Арг1, Арг2)), узнать(Арг1, Арг2, Ответ), Ответ = 'нет'.

% Главная цель программы
цель :- язык_программирования(Арг), !,
    format('Загаданный язык программирования — ~w!', [Арг]), очистить.
цель :-
    format('К сожалению, этот язык программирования мне неизвестен. :('), очистить.

% База знаний
% Языки: python, JS, Assembler, Go, C++, Ruby, Prolog, Haskell, StandardML
язык_программирования('Python') :-
    это('Скриптовый язык'),
    это('ООП язык'),

    свойство('У него', 'утиная типизация'),
    свойство('Он', 'императивный').

язык_программирования('JavaScript') :-
    это('Скриптовый язык'),
    это('Функциональный язык'),

    свойство('У него', 'динамическая типизация'),
    свойство('Он', 'императивный').

язык_программирования('Assembler') :-
    это('Машинный язык'),

    свойство('Он', 'имеет доступ к памяти').

язык_программирования('Go') :-
    это('Функциональный язык'),

    свойство('Он', 'императивный'),
    свойство('Он', 'поддерживает многопоточность'),
    свойство('Он', 'статически типизированный'),
    свойство('Он', 'компилируемый').

язык_программирования('C++') :-
    это('ООП язык'),

    свойство('У него', 'статическая типизация'),
    свойство('Он', 'императивный'),
    свойство('Он', 'компилируемый'),
    свойство('Он', 'имеет доступ к памяти').

язык_программирования('Ruby') :-
    это('ООП язык'),
    
    свойство('У него', 'динамическая типизация'),
    свойство('Он', 'императивный'),
    свойство('У него', 'утиная типизация').

язык_программирования('Prolog') :-
    это('Логический язык'),

    свойство('Он', 'декларативный'),
    свойство('Он', 'компилируемый'),

    нет_свойства('У него', 'есть поддержка классов'),
    нет_свойства('У него', 'есть методы').

язык_программирования('Haskell') :-
    это('Функциональный язык'),

    свойство('Он', 'декларативный'),
    свойство('Он', 'компилируемый'),
    свойство('У него', 'статическая типизация'),
    свойство('У него', 'есть ленивые вычисления'),

    нет_свойства('У него', 'есть методы'),
    нет_свойства('У него', 'есть поддержка классов').

язык_программирования('StandardML') :-
    это('Функциональный язык'),

    свойство('Он', 'императивный'),
    свойство('Он', 'компилируемый'),
    свойство('У него', 'статическая типизация').

% Общие классы
это('ООП язык') :-
    свойство('У него', 'есть поддержка классов'),
    свойство('У него', 'есть методы').

это('Скриптовый язык') :-
    свойство('У него', 'динамическая типизация'),
    свойство('Он', 'интерпретируемый').

это('Логический язык') :-
    свойство('У него', 'есть отношения').

это('Функциональный язык') :-
    свойство('У него', 'есть функции'),
    свойство('У него', 'функции — объекты 1-го класса').

это('Машинный язык') :-
    свойство('Он', 'зависит от модели процессора').